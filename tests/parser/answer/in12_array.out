> Create symbol table (scope level 0)
package: main
func: main
> Create symbol table (scope level 1)
func_signature: ()V
> Insert `main` (addr: -1) to scope level 0
INT_LIT 3
> Insert `x` (addr: 0) to scope level 1
IDENT (name=x, address=0)
INT_LIT 0
INT_LIT 1
INT_LIT 2
ADD
ASSIGN
IDENT (name=x, address=0)
INT_LIT 1
IDENT (name=x, address=0)
INT_LIT 0
INT_LIT 1
SUB
ASSIGN
IDENT (name=x, address=0)
INT_LIT 2
IDENT (name=x, address=0)
INT_LIT 2
INT_LIT 1
SUB
INT_LIT 3
MUL
ASSIGN
IDENT (name=x, address=0)
INT_LIT 0
PRINTLN int32
IDENT (name=x, address=0)
INT_LIT 1
PRINTLN int32
IDENT (name=x, address=0)
INT_LIT 2
PRINTLN int32
INT_LIT 3
> Insert `y` (addr: 1) to scope level 1
IDENT (name=y, address=1)
INT_LIT 0
FLOAT_LIT 1.000000
FLOAT_LIT 2.000000
ADD
ASSIGN
IDENT (name=y, address=1)
INT_LIT 1
IDENT (name=y, address=1)
INT_LIT 0
FLOAT_LIT 1.000000
SUB
ASSIGN
IDENT (name=y, address=1)
INT_LIT 2
IDENT (name=y, address=1)
INT_LIT 2
INT_LIT 1
SUB
FLOAT_LIT 3.000000
QUO
ASSIGN
IDENT (name=y, address=1)
INT_LIT 0
PRINTLN float32
IDENT (name=y, address=1)
INT_LIT 1
PRINTLN float32
IDENT (name=y, address=1)
INT_LIT 2
PRINTLN float32

> Dump symbol table (scope level: 1)
Index     Name      Type      Addr      Lineno    Ele_type  Func_sig  
0         x         array     0         4         int32     -         
1         y         array     1         12        float32   -         


> Dump symbol table (scope level: 0)
Index     Name      Type      Addr      Lineno    Ele_type  Func_sig  
0         main      func      -1        3         -         ()V       

Total lines: 19
